# -*- coding: utf-8 -*-
"""customer segmentation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iXR_GC3SZJJzlWzez6PthlhlIgjnO9EK
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import sklearn.cluster as kmeans

customer_data = pd.read_csv('Mall_Customers.csv')

customer_data.head()

customer_data.tail()

customer_data.shape

print("Number of rows",customer_data.shape[0])
print("Number of columns",customer_data.shape[1])

customer_data.describe()

customer_data.info()

customer_data.isnull().sum()

x = customer_data.drop(columns=['CustomerID','Gender','Age'], axis = 1).values

import matplotlib.pyplot as plt
plt.figure(figsize=(10,8))
sns.scatterplot(x)
plt.xlabel('Annual Income(k$)')
plt.ylabel('Spending Score')
plt.show()

from sklearn.cluster import KMeans
import matplotlib.pyplot as plt

wcss = []
for i in range(1, 11):
    new_kmeans = KMeans(n_clusters=i, init='k-means++', random_state=2)
    new_kmeans.fit(x)
    wcss.append(new_kmeans.inertia_)

# Plot the elbow graph
plt.figure(figsize=(10, 8))
plt.plot(range(1,11),wcss)  # Changed from plt.plot(range(1, 11), wcss)
plt.title('The Elbow Point Graph')
plt.xlabel('Number of clusters (K)')
plt.ylabel('WCSS')
plt.show()

kmeans = KMeans(n_clusters=5, init= 'k-means++', random_state=0)
y = kmeans.fit_predict(x)

kmeans.cluster_centers_

plt.figure(figsize=(10,8))
plt.scatter(x[y==0,0], x[y==0,1], s=50, c='red',label='cluster1')
plt.scatter(x[y==1,0], x[y==1,1], s=50, c='blue',label='cluster2') # Corrected 'labe1' to 'label'
plt.scatter(x[y==2,0], x[y==2,1], s=50, c='pink',label='cluster3')
plt.scatter(x[y==3,0], x[y==3,1], s=50, c='yellow',label='cluster4')
plt.scatter(x[y==4,0], x[y==4,1], s=50, c='green',label='cluster5')
plt.scatter(kmeans.cluster_centers_[:,0],kmeans.cluster_centers_[:,1], s=200, c='black',label='Centroids')
plt.title('Customer Groups')
plt.xlabel('Annuak Income(k$)')
plt.ylabel('Spending Score')
plt.show()

import pandas as pd

# Read the data from a CSV file
customer_data = pd.read_csv("Mall_Customers.csv")

# Extract the desired columns
x = customer_data[['Annual Income (k$)', 'Spending Score (1-100)']]

# The rest of the code remains the same

from sklearn.cluster import KMeans
k_means = KMeans()
k_means.fit(x)

k_means = KMeans()
k_means.fit_predict(x)

x = customer_data[['Annual Income (k$)', 'Spending Score (1-100)']]

k_means = KMeans(n_clusters=5, random_state=42)
y_means = k_means.fit_predict(x)
y_means

sns.countplot(x= 'Gender', data = customer_data)

customer_data['Gender'].value_counts()

sns.countplot(x= 'Age', data = customer_data)

customer_data['Age'].value_counts()

customer_data.groupby('Gender')[['Age']].mean()

sns.countplot(x = 'Age', hue = 'Annual Income (k$)', data = customer_data)

sns.barplot(y = 'Spending Score (1-100)', x = 'Gender', data = customer_data)

sns.barplot(y = 'Gender', x = 'Annual Income (k$)', data = customer_data)

sns.pairplot(customer_data, hue = 'Gender', size = 3)

sns.pairplot(customer_data, hue = 'Spending Score (1-100)', size = 3)

customer_data['Gender'].replace({"Male":"1","Female":"0"}, inplace = True)

customer_data.head()

customer_data = customer_data.astype({'Gender':'str'})
customer_data.info()

from sklearn.cluster import KMeans
p = []

for i in range(1, 11):
  kmeans = KMeans(n_clusters=i, init='k-means++',
                  max_iter=600, n_init=10, random_state=42)
  kmeans.fit(x)
  p.append(kmeans.inertia_)

plt.plot(range(1,11),p)
plt.title('The Elbow Method')
plt.xlabel('Number of clusters')
plt.ylabel('p')
plt.show()

kmeans = KMeans(n_clusters=4, init='k-means++',
                  max_iter=600, n_init=10, random_state=0)
ykmeans = kmeans.fit_predict(x)

plt.figure(figsize=(10,10))
plt.scatter(x[y_means == 0,0], x[y_means == 0,1],
            s = 100, c = 'red', label = 'Gender')
plt.scatter(x[y_means == 1,0], x[y_means == 1,1],
            s = 100, c = 'blue', label = 'Age')
plt.scatter(x[y_means == 2,0], x[y_means == 2,1],
            s = 100, c = 'yellow', label = 'Annual Income (k$)')
plt.scatter(x[y_means == 3,0], x[y_means == 3,1],
            s = 100, c = 'pink', label = 'Spending Score (1-100)')
plt.scatter(kmeans.cluster_centers_[:,0], kmeans.cluster_centers_[:,1],
            s = 100, c = 'black', label = 'centroids')
plt.legend()

y_kmeans = kmeans.fit_predict(x)
customer_data['cluster'] = y_kmeans
customer_data.head()

